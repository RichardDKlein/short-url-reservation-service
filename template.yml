#
# The Short URL Reservation Service
# (Copyright 2024 by Richard Klein)
#
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Short URL Reservation Service - api.richarddklein.com/shorturl/reservations
Globals:
  Api:
    EndpointConfiguration: REGIONAL

Resources:
  # Define the Lambda function
  ShortUrlReservationService:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.richarddklein.shorturlreservationservice.StreamLambdaHandler::handleRequest
      Runtime: java21
      CodeUri: .
      MemorySize: 512
      Timeout: 90
      Role: !GetAtt LambdaExecutionRole.Arn
      SnapStart:
        ApplyOn: "PublishedVersions"

      # Defined below are the REST endpoints. For each endpoint, a pair of
      # paths are defined. One path is for the case where the URL specifies
      # either the API Gateway or localhost. The other path is for the case
      # where the URL specifies the custom domain that redirects to the API
      # Gateway. Thus, an endpoint URL can have one of three possible values:
      #
      # API Gateway:   <aws-api-ID>.execute-api.us-east-2.amazonaws.com/Prod/shorturl/reservations/<endpoint>
      # localhost:     localhost:4000/shorturl/reservations/<endpoint>
      # Custom Domain: api.richarddklein.com/shorturl/reservations/<endpoint>
      #
      # When the service is running on your local machine, via the command
      # `sam local start-api`, use the above `localhost` URL.
      #
      # When the service is running on AWS, use either the above `API Gateway`
      # URL or the above `Custom Domain` URL. (It is recommended that you use
      # the `Custom Domain` hostname, as it is simpler to remember and to type.)
      #
      # For a description of the functionality provided by the REST endpoints,
      # see the comments in the `ShortUrlReservationController` interface.
      Events:
        InitializeShortUrlReservationRepositoryViaApiGatewayOrLocalHost:
          Type: Api
          Properties:
            Path: /shorturl/reservations/initialize-repository
            Method: POST
        InitializeShortUrlReservationRepositoryViaCustomDomain:
          Type: Api
          Properties:
            Path: /initialize-repository
            Method: POST
        GetSpecificShortUrlViaApiGatewayOrLocalHost:
          Type: Api
          Properties:
            Path: /shorturl/reservations/specific/{proxy+}
            Method: GET
        GetSpecificShortUrlViaCustomDomain:
          Type: Api
          Properties:
            Path: /specific/{proxy+}
            Method: GET
        GetAllShortUrlsViaApiGatewayOrLocalHost:
          Type: Api
          Properties:
            Path: /shorturl/reservations/all
            Method: GET
        GetAllShortUrlsViaCustomDomain:
          Type: Api
          Properties:
            Path: /all
            Method: GET
        ReserveAnyShortUrlViaApiGatewayOrLocalHost:
          Type: Api
          Properties:
            Path: /shorturl/reservations/reserve/any
            Method: PATCH
        ReserveAnyShortUrlViaCustomDomain:
          Type: Api
          Properties:
            Path: /reserve/any
            Method: PATCH
        ReserveSpecificShortUrlViaApiGatewayOrLocalHost:
          Type: Api
          Properties:
            Path: /shorturl/reservations/reserve/specific/{proxy+}
            Method: PATCH
        ReserveSpecificShortUrlViaCustomDomain:
          Type: Api
          Properties:
            Path: /reserve/specific/{proxy+}
            Method: PATCH
        ReserveAllShortUrlsViaApiGatewayOrLocalHost:
          Type: Api
          Properties:
            Path: /shorturl/reservations/reserve/all
            Method: PATCH
        ReserveAllShortUrlViaCustomDomain:
          Type: Api
          Properties:
            Path: /reserve/all
            Method: PATCH
        CancelSpecificShortUrlReservationViaApiGatewayOrLocalHost:
          Type: Api
          Properties:
            Path: /shorturl/reservations/cancel/specific/{proxy+}
            Method: PATCH
        CancelSpecificShortUrlReservationViaCustomDomain:
          Type: Api
          Properties:
            Path: /cancel/specific/{proxy+}
            Method: PATCH
        CancelAllShortUrlReservationsViaApiGatewayOrLocalHost:
          Type: Api
          Properties:
            Path: /shorturl/reservations/cancel/all
            Method: PATCH
        CancelAllShortUrlReservationsViaCustomDomain:
          Type: Api
          Properties:
            Path: /cancel/all
            Method: PATCH

  # Define the IAM Role for the Lambda function
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              # Write permission for CloudWatch logs
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              # Read/write permission for DynamoDB
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:GetItem
                  - dynamodb:Scan
                  - dynamodb:Query
                Resource: "*"
              # Read policy for SSM parameters
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                Resource:
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/shortUrl/reservations/tableName
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/shortUrl/reservations/range
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/shortUrl/users/adminUsername
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/shortUrl/users/adminPassword
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/shortUrl/users/jwtSecretKey
